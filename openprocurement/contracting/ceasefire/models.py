# -*- coding: utf-8 -*-
from schematics.transforms import whitelist
from schematics.types import StringType, MD5Type
from uuid import uuid4
from zope.interface import implementer, Interface
from schematics.types.compound import (
    ModelType,
)

from openprocurement.api.models.common import (
    Period,
)
from openprocurement.api.models.auction_models import (
    Organization,
)
from openprocurement.api.models.schematics_extender import (
    IsoDateTimeType,
    ListType,
    Model,
)
from openprocurement.contracting.core.models import (
    Contract as BaseContract,
    contract_create_role,
    contract_view_role,
)
from openprocurement.contracting.ceasefire import constants


class Milestone(Model):
    """Contract milestone
    """
    id = MD5Type(required=True, default=lambda: uuid4().hex)
    dateMet = IsoDateTimeType()
    dateModified = IsoDateTimeType()
    description = StringType()
    dueDate = IsoDateTimeType()
    status = StringType(choices=constants.MILESTONE_STATUSES)
    title = StringType()
    type = StringType(choices=constants.MILESTONE_TYPES)


class ICeasefireContract(Interface):
    """Contract marker interface
    """


@implementer(ICeasefireContract)
class Contract(BaseContract):
    """Common Contract
    """
    class Options:
        roles = {
            'create': contract_create_role + whitelist('contractType'),
            'view': contract_view_role + whitelist('contractType'),
        }
    awardID = StringType(required=True)  # overridden to make required
    contractID = StringType(required=True)  # overridden to make required
    status = StringType(choices=constants.CONTRACT_STATUSES)
    contractType = StringType(required=False, choices=['ceasefire'])  # must be generated by databridge
    period = ModelType(Period)
    buyers = ListType(ModelType(Organization))
    milestones = ListType(ModelType(Milestone))
